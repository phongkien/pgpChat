<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <beans:bean id="tokenRepos" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
        <beans:property name="headerName" value="X-XSRF-TOKEN"/>
    </beans:bean>

	<!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true">
		<intercept-url pattern="/register/**" access="permitAll()"/>
		<intercept-url pattern="/error/**" access="permitAll()"/>
		<intercept-url pattern="/static/**" access="permitAll()"/>
		<intercept-url pattern="/login/**" access="permitAll()"/>
		<intercept-url pattern="/j_spring_security_check/**" access="permitAll()"/>
		<intercept-url pattern="/j_spring_security_logout/**" access="permitAll()"/>
		<intercept-url pattern="/**" access="isFullyAuthenticated()" />
		
		<!-- access denied page -->
		<access-denied-handler error-page="/error/403" />

		<form-login
			login-page="/login/custom"
			default-target-url="/login/success"
			always-use-default-target="true"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/login/failure"
			username-parameter="username"
			password-parameter="password"/>
			
		<logout logout-success-url="/logout" logout-url="/j_spring_security_logout" />
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/error/session/expired"/>
		</session-management>
		
		<!-- enable csrf protection -->
        <csrf token-repository-ref="tokenRepos"/>
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,confirmed from pgpchat.users where username=?"
				authorities-by-username-query="select u.username, ur.role from pgpchat.user_role ur, pgpchat.users u where u.user_id = ur.user_id and u.username=?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>